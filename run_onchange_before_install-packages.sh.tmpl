#!/usr/bin/env bash

shopt -s expand_aliases
set -e

command -v doas &>/dev/null && [ -f /etc/doas.conf ] && alias sudo='doas' || true

BRIGHT_CYAN=$(tput setaf 6)
BRIGHT_WHITE=$(tput setaf 15)
BG_BLUE=$(tput setab 4)
BOLD=$(tput bold)
RESET=$(tput sgr0)

WARN="$BOLD$BRIGHT_WHITE$BG_BLUE"
PROMPT="$BOLD$BRIGHT_CYAN"

{{ if eq .osIdLike "linux-debian" -}}
echo "${WARN}Both apt and snap require sudo: expect asking for the sudo password.${RESET}"
echo "${PROMPT}Installing command line apps: sudo apt install...${RESET}"
sudo apt install -y build-essential bash-completion micro wget age mosh dialog opendoas \
  gcp bat ncdu jq tmux silversearcher-ag tig httpie prettyping htop parallel tree \
  brotli gh hub mc ripgrep duf hyperfine zoxide nginx shellcheck clangd git-lfs etckeeper \
  grc golang gopls rustc cargo python3 python3-pylsp net-tools firejail waypipe lnav libfuse2t64
{{ if .hasGui -}}
echo "${PROMPT}Installing GUI apps: sudo apt install...${RESET}"
sudo apt install -y meld alacritty flatpak gnome-software-plugin-flatpak ttf-mscorefonts-installer firetools
{{- end }}
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
echo "${PROMPT}Installing brew packages...${RESET}"
brew bundle --file=/dev/stdin <<EOF
tap "homebrew/bundle"
tap "joerdav/xc"
brew "aws-iam-authenticator"
brew "awscli"
brew "bash-git-prompt"
brew "bottom"
brew "broot"
brew "btop"
brew "cheat"
brew "deno"
brew "diff-so-fancy"
brew "dust"
brew "eza"
brew "fastfetch"
brew "fd"
brew "fzf"
brew "gping"
brew "helix"
brew "helm"
brew "kubernetes-cli"
brew "lazygit"
brew "lua"
brew "lua-language-server"
brew "nvm"
brew "onefetch"
brew "prettier"
brew "pyenv"
brew "rust-analyzer"
brew "sd"
brew "sops"
brew "tealdeer"
brew "typescript-language-server"
brew "uv"
brew "wabt"
brew "whalebrew"
brew "xc"
brew "xh"
brew "yazi"
brew "zig"
brew "zls"
EOF
brew completions link
{{ if .hasGui -}}flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo{{- end }}

{{- else if eq .osIdLike "darwin" -}}
if [ -f /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -f /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
fi
echo "${PROMPT}Installing brew packages...${RESET}"
brew bundle --file=/dev/stdin <<EOF
tap "homebrew/bundle"
tap "joerdav/xc"
brew "aws-iam-authenticator"
brew "awscli"
brew "bash-completion"
brew "bash-git-prompt"
brew "bat"
brew "bottom"
brew "broot"
brew "brotli"
brew "btop"
brew "cheat"
brew "deno"
brew "dialog"
brew "diff-so-fancy"
brew "duf"
brew "dust"
brew "eza"
brew "fastfetch"
brew "fd"
brew "fzf"
brew "gh"
brew "git"
{{ if .hasGui -}}brew "git-gui"{{- end }}
brew "git-lfs"
brew "go"
brew "gopls"
brew "gping"
brew "grc"
brew "helix"
brew "helm"
brew "htop"
brew "httpie"
brew "hub"
brew "hyperfine"
brew "jq"
brew "kubernetes-cli"
brew "lazygit"
brew "lnav"
brew "lua"
brew "lua-language-server"
brew "micro"
brew "midnight-commander"
brew "mosh"
brew "ncdu"
brew "nginx"
brew "nvm"
brew "onefetch"
brew "parallel"
brew "prettier"
brew "prettyping"
brew "pyenv"
brew "python@3"
brew "ripgrep"
brew "rust"
brew "rust-analyzer"
brew "sd"
brew "shellcheck"
brew "sops"
brew "tealdeer"
brew "the_silver_searcher"
brew "tig"
brew "tmux"
brew "tree"
brew "typescript-language-server"
brew "util-linux"
brew "uv"
brew "wabt"
brew "wget"
brew "whalebrew"
brew "xc"
brew "xh"
brew "yazi"
brew "zig"
brew "zls"
brew "zoxide"
{{ if .hasGui -}}cask "alacritty"{{- end }}
{{ if .hasGui -}}cask "font-fira-code-nerd-font"{{- end }}
{{ if .hasGui -}}cask "font-hack-nerd-font"{{- end }}
{{ if .hasGui -}}cask "meld"{{- end }}
EOF
{{- end }}

if command -v doas &>/dev/null; then
  if ! [ -f /etc/doas.conf ]; then
    echo "${PROMPT}Installing the default doas config [sudo]...${RESET}"
    sudo tee /etc/doas.conf >/dev/null <<EOF
permit persist keepenv setenv { PATH XAUTHORITY LANG LC_ALL } :sudo

permit nopass :sudo cmd apt args update
permit nopass :sudo cmd apt args upgrade
permit nopass :sudo cmd apt args autoremove
permit nopass :sudo cmd apt args autoclean

permit nopass :sudo cmd snap args refresh

permit nopass :sudo cmd ping
permit nopass :sudo cmd prettyping
EOF
    {{ if eq .osIdLike "darwin" -}}
      sudo chown root /etc/doas.conf
    {{- else -}}
      sudo chown root:root /etc/doas.conf
    {{- end }}
    sudo chmod 0400 /etc/doas.conf
  fi
fi

if command -v tmux &> /dev/null; then
  if [ ! -f "$HOME/.config/tmux/plugins/tpm/tpm" ]; then
    echo "${PROMPT}Installing tmux plugin manager...${RESET}"
    git clone https://github.com/tmux-plugins/tpm "$HOME/.config/tmux/plugins/tpm"
  fi
  if [ -f "$HOME/.config/tmux/plugins/tpm/bin/install_plugins" ]; then
    echo "${PROMPT}Installing tmux plugins...${RESET}"
    "$HOME/.config/tmux/plugins/tpm/bin/install_plugins"
  fi
fi

if command -v etckeeper &> /dev/null; then
  if [ ! -d /etc/.git ]; then
    echo "${PROMPT}Initializing etckeeper [sudo]...${RESET}"
    sudo etckeeper init
    sudo etckeeper commit "The very first commit."
  fi
fi

echo "${PROMPT}Installing the latest stable node...${RESET}"
[ ! -d ~/.nvm ] && mkdir ~/.nvm || true
\. "$(brew --prefix nvm)/nvm.sh"
nvm install stable

if ! command -v bun &> /dev/null; then
  echo "${PROMPT}Installing bun...${RESET}"
  curl -fsSL https://bun.sh/install | bash
fi

if ! [ -d ~/.local/share/libs/scripts ]; then
  echo "${PROMPT}Cloning bash scripts...${RESET}"
  mkdir -p ~/.local/share/libs
  pushd ~/.local/share/libs > /dev/null
  git clone --filter=blob:none --sparse git@github.com:uhop/options.bash scripts
  cd scripts
  git sparse-checkout set --no-cone '/*.sh' '/README.md'
  popd > /dev/null
fi
